<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" version="5.0" xml:lang="hu">
    <info>
        <title>Helló, Arroway!</title>
        <keywordset>
            <keyword/>
        </keywordset>
    </info>
    
    <section>
        <title>OO szemlélet</title>
        <para>
            A módosított polártranszformációs normális generátor beprogramozása Java nyelven. Mutassunk rá,
hogy a mi természetes saját megoldásunk (az algoritmus egyszerre két normálist állít elő, kell egy
példánytag, amely a nem visszaadottat tárolja és egy logikai tag, hogy van-e tárolt vagy futtatni kell
az algot.) és az OpenJDK, Oracle JDK-ban a Sun által adott OO szervezés ua.!
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <programlisting  language="java"><![CDATA[
public class PolarGenerator {
	boolean nincsTarolt = true;
	double tarolt;

	public PolarGenerator() {
		nincsTarolt = true;
	}

	public double kovetkezo() {
		if (nincsTarolt) {
			double u1, u2, v1, v2, w;
			do {
				u1 = Math.random();
				u2 = Math.random();
				v1 = 2 * u1 - 1;
				v2 = 2 * u2 - 1; 
				w = v1 * v1 + v2 * v2;
			} while (w > 1);
			double r = Math.sqrt((-2 * Math.log(w)) / w);
			tarolt = r * v2;
			nincsTarolt = !nincsTarolt;
			return r* v1;
		} else {
			nincsTarolt = !nincsTarolt;
			return tarolt;
		}
	}

	public static void main(String[] args) {
		PolarGenerator g = new PolarGenerator();
		for (int i = 0; i < 10; ++i) {
			System.out.println(g.kovetkezo());
		}
	}
}

            }]]>
        </programlisting>

    </section>        


    <section>
        <title>A BPP algoritmus Java megvalósítása</title>
        <para>
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>        

    <section>
        <title>Java osztályok a Pi-ben</title>
        <para>
            Az előző feladat kódját fejleszd tovább: vizsgáld, hogy Vannak-e Java osztályok a Pi hexadecimális kifejtésében!
        </para>
        <para>
            Megoldás videó:
        </para>
        <para>
            Megoldás forrása:                
        </para>
        <para>
            Tanulságok, tapasztalatok, magyarázat...
        </para>
    </section>        
        

</chapter>                
